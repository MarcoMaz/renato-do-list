{"version":3,"sources":["state/taskSlice.ts","state/store.ts","components/core/Button.tsx","components/core/Headline.tsx","components/core/Image.tsx","assets/images/renato_1.jpg","assets/copyText.js","views/LandingView/LandingView.tsx","components/core/SectionParagraphs.tsx","assets/images/renato_2.jpg","views/IntroView1/IntroView1.tsx","state/hooks.ts","components/Dialog.tsx","components/Modal.tsx","components/Toast.tsx","components/core/Checkbox.tsx","assets/sounds/taaac.mp3","components/Task.tsx","components/TasksTodo.tsx","components/TasksDone.tsx","views/MainView/MainView.tsx","components/core/TextArea.tsx","components/core/LabelIcon.tsx","components/core/RadioButton.tsx","components/Speed.tsx","components/Urgency.tsx","components/Fun.tsx","views/AddEditView/AddEditView.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["taskSlice","createSlice","name","initialState","id","label","isCompleted","speed","urgency","fun","total","isClicked","isHighlighted","reducers","addTask","state","action","newTask","Date","now","payload","push","editTask","todos","find","todo","index","toggleTask","highlightTask","removeTask","filter","actions","combineReducers","task","taskReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","thunk","Button","className","type","isDisabled","arrowLeft","arrowRight","editSign","trashSign","plusSign","onClick","disabled","Headline","isFirstElement","headlineElement","Image","alt","srcUrl","src","copyText","general","headline","landingView","imageAlt","ctaLabel","introView1","subheadline","arrayOfParagraphs","modal","deleteButton","goBackButton","toastLabel","headlineLabel","options","tasks","tasksTodoHeadline","tasksDoneHeadline","addEditTask","buttonGoBack","buttonDone","addTaskHeadline","modifyTaskHeadline","placeHolder","LandingView","renatoImg1","to","SectionParagraphs","map","paragraph","IntroView1","renatoImg2","useAppDispatch","useDispatch","useAppSelector","useSelector","Dialog","setShowModal","setShowToast","dispatch","selectedItem","setTimeout","Modal","Toast","Checkbox","value","isChecked","onChange","checked","htmlFor","Task","setSpeed","setUrgency","setFun","setEditIndex","setItemText","setModifyTask","Audio","taaacSound","play","TasksTodo","tasksTotal","tasksTodo","taskCounter","isAccordionOpen","setIsAccordionOpen","useState","sort","a","b","TasksDone","tasksDone","MainView","showModal","showToast","tasksCompleted","length","Boolean","useEffect","bodyElement","document","querySelector","classList","add","remove","TextArea","placeholder","rows","LabelIcon","speedIcon","urgencyIcon","funIcon","RadioButton","Speed","e","target","Urgency","Fun","AddEditView","itemText","editIndex","modifyTask","event","persistor","persistStore","App","loading","exact","path","component","render","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.deac4530.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from './store';\n\n// Define a type for the slice state\nexport interface taskProps {\n  id: number;\n  label: string;\n  isCompleted: boolean;\n  speed: number;\n  urgency: number;\n  fun: number;\n  total: number;\n  isClicked: boolean;\n  isHighlighted: boolean;\n}\n\n// Define the initial state using that type\nconst initialState: taskProps[] = [\n  {\n    id: 0,\n    label: 'batman',\n    isCompleted: false,\n    speed: 3,\n    urgency: 1,\n    fun: 1,\n    total: 5,\n    isClicked: false,\n    isHighlighted: false,\n  },\n  {\n    id: 1,\n    label: 'robin',\n    isCompleted: false,\n    speed: 1,\n    urgency: 3,\n    fun: 3,\n    total: 7,\n    isClicked: false,\n    isHighlighted: false,\n  },\n];\n\nexport const taskSlice = createSlice({\n  name: 'task',\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      const newTask = {\n        id: Date.now(),\n        label: action.payload.label,\n        isCompleted: false,\n        speed: action.payload.speed,\n        urgency: action.payload.urgency,\n        fun: action.payload.fun,\n        total:\n          action.payload.speed + action.payload.urgency + action.payload.fun,\n        isClicked: false,\n        isHighlighted: false,\n      };\n      state.push(newTask);\n    },\n    editTask: (state, action) => {\n      const todos = state.find((todo) => todo.id === action.payload.index);\n      if (todos) {\n        todos.label = action.payload.label;\n        todos.speed = action.payload.speed;\n        todos.urgency = action.payload.urgency;\n        todos.fun = action.payload.fun;\n      }\n    },\n    toggleTask: (state, action) => {\n      const todos = state.find((todo) => todo.id === action.payload);\n      if (todos) {\n        todos.isCompleted = !todos.isCompleted;\n      }\n    },\n    highlightTask: (state, action) => {\n      const todos = state.find((todo) => todo.id === action.payload);\n      if (todos) {\n        todos.isHighlighted = !todos.isHighlighted;\n      }\n    },\n    removeTask: (state, action) => {\n      const todos = state.filter((todo) => todo.id !== action.payload);\n      return todos;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addTask, editTask, highlightTask, toggleTask, removeTask } =\n  taskSlice.actions;\n\nexport const selectCount = (state: RootState) => state.task;\n\nexport default taskSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport taskReducer from './taskSlice';\n\nconst reducers = combineReducers({\n  task: taskReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: [thunk],\n});\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","/* eslint-disable react/button-has-type */\nimport { FunctionComponent } from 'react';\n\n// import ICONS\nimport {\n  FiTrash2,\n  FiEdit2,\n  FiArrowRight,\n  FiPlus,\n  FiChevronLeft,\n} from 'react-icons/fi';\n\ntype AllowedButtonType = 'button' | 'submit' | 'reset';\n\ninterface ButtonProps {\n  className?: string;\n  label?: string;\n  type: AllowedButtonType;\n  isDisabled?: boolean;\n  arrowLeft?: boolean;\n  arrowRight?: boolean;\n  trashSign?: boolean;\n  plusSign?: boolean;\n  editSign?: boolean;\n  onClick?: () => void;\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n  className,\n  label,\n  type = 'button',\n  isDisabled,\n  arrowLeft,\n  arrowRight,\n  editSign,\n  trashSign,\n  plusSign,\n  onClick,\n}) => {\n  return (\n    <button\n      className={className}\n      type={type}\n      disabled={isDisabled}\n      onClick={onClick}\n    >\n      {arrowLeft && <FiChevronLeft data-testid=\"fi-chevron-left\" />}\n      {plusSign && <FiPlus />}\n      {editSign && <FiEdit2 />}\n      {trashSign && <FiTrash2 />}\n      {label}\n      {arrowRight && <FiArrowRight />}\n    </button>\n  );\n};\n\nexport default Button;\n","import { FunctionComponent } from 'react';\n\ninterface HeadlineProps {\n  label: string;\n  isFirstElement?: boolean;\n  className?: string;\n}\n\nconst Headline: FunctionComponent<HeadlineProps> = ({\n  label,\n  isFirstElement,\n  className,\n}) => {\n  let headlineElement;\n\n  if (isFirstElement) {\n    headlineElement = <h1 className={className}>{label}</h1>;\n  } else {\n    headlineElement = <h2 className={className}>{label}</h2>;\n  }\n\n  return <>{headlineElement}</>;\n};\n\nexport default Headline;\n","import { FunctionComponent } from 'react';\n\ninterface ImageProps {\n  alt: string;\n  srcUrl: string;\n  className?: string;\n}\n\nconst Image: FunctionComponent<ImageProps> = ({ alt, srcUrl, className }) => {\n  return (\n    <figure className={className}>\n      <img alt={alt} src={srcUrl} />\n    </figure>\n  );\n};\n\nexport default Image;\n","export default __webpack_public_path__ + \"static/media/renato_1.c380084b.jpg\";","const copyText = {\n  general: {\n    headline: 'Renato-do list',\n  },\n  landingView: {\n    imageAlt: 'landing-view',\n    ctaLabel: 'Inizia',\n  },\n  introView1: {\n    imageAlt: 'intro-view-1',\n    subheadline: 'Come funziona?',\n    arrayOfParagraphs: ['paragraph #1', 'paragraph #2', 'paragraph #3'],\n    ctaLabel: 'Ho capito',\n  },\n  modal: {\n    label: 'Ma siamo sicuri?',\n    deleteButton: 'Rimuovi',\n    goBackButton: 'Annulla',\n  },\n  toastLabel: 'Hai rimosso una task',\n  speed: {\n    headline: {\n      headlineLabel: \"Quanto e' veloce?\",\n    },\n    name: 'speed option',\n    options: [\n      {\n        id: 1,\n        label: 'veloce',\n      },\n      {\n        id: 2,\n        label: 'medio',\n      },\n      {\n        id: 3,\n        label: 'lento',\n      },\n    ],\n  },\n  urgency: {\n    headline: {\n      headlineLabel: \"Quanto e' importante?\",\n    },\n    name: 'urgency option',\n    options: [\n      {\n        id: 1,\n        label: 'non urgente',\n      },\n      {\n        id: 3,\n        label: 'urgente',\n      },\n    ],\n  },\n  fun: {\n    headline: {\n      headlineLabel: \"Quanto e' divertente?\",\n    },\n    name: 'fun option',\n    options: [\n      {\n        id: 1,\n        label: 'tanto',\n      },\n      {\n        id: 3,\n        label: 'poco',\n      },\n    ],\n  },\n  tasks: {\n    tasksTodoHeadline: 'Ancora da fare',\n    tasksDoneHeadline: 'Taaaaaaaaaaac! Finito!',\n  },\n  addEditTask: {\n    buttonGoBack: 'Lista',\n    buttonDone: 'fatto',\n    addTaskHeadline: 'Aggiungi una task',\n    modifyTaskHeadline: 'Modifica la task',\n    placeHolder: 'Cosa devi fare? Scrivilo qui.',\n  },\n};\n\nexport default copyText;\n","import { FunctionComponent } from 'react';\n\n// Router\nimport { Link } from 'react-router-dom';\n\n// Components\nimport Button from '../../components/core/Button';\nimport Headline from '../../components/core/Headline';\nimport Image from '../../components/core/Image';\nimport renatoImg1 from '../../assets/images/renato_1.jpg';\n\n// CopyText\nimport copyText from '../../assets/copyText';\n\nexport const LandingView: FunctionComponent = () => {\n  const { headline } = copyText.general;\n  const { imageAlt, ctaLabel } = copyText.landingView;\n\n  return (\n    <div className=\"LandingView\">\n      <Headline\n        className=\"LandingView__headline\"\n        isFirstElement\n        label={headline}\n      />\n      <Image\n        alt={imageAlt}\n        srcUrl={renatoImg1}\n        className=\"LandingView__image\"\n      />\n      <Link to=\"/intro-1\" className=\"LandingView__button\">\n        <Button type=\"button\" label={ctaLabel} arrowRight />\n      </Link>\n    </div>\n  );\n};\n\nexport default LandingView;\n","import { FunctionComponent } from 'react';\n\ninterface SectionParagraphs {\n  className?: string;\n  arrayOfParagraphs: string[];\n}\n\nconst SectionParagraphs: FunctionComponent<SectionParagraphs> = ({\n  className,\n  arrayOfParagraphs,\n}) => {\n  return (\n    <section className={className} data-testid=\"section-paragraphs\">\n      {arrayOfParagraphs &&\n        arrayOfParagraphs.map((paragraph, index) => (\n          <p key={index}>{paragraph}</p>\n        ))}\n    </section>\n  );\n};\n\nexport default SectionParagraphs;\n","export default __webpack_public_path__ + \"static/media/renato_2.91ad4da8.jpg\";","import { FunctionComponent } from 'react';\n\n// Router\nimport { Link } from 'react-router-dom';\n\n// Components\nimport Button from '../../components/core/Button';\nimport Headline from '../../components/core/Headline';\nimport Image from '../../components/core/Image';\nimport SectionParagraphs from '../../components/core/SectionParagraphs';\nimport renatoImg2 from '../../assets/images/renato_2.jpg';\n\n// CopyText\nimport copyText from '../../assets/copyText';\n\nexport const IntroView1: FunctionComponent = () => {\n  const { headline } = copyText.general;\n  const { subheadline, arrayOfParagraphs } = copyText.introView1;\n  const { imageAlt, ctaLabel } = copyText.introView1;\n\n  return (\n    <div className=\"IntroView1\">\n      <Headline\n        className=\"IntroView1__headline\"\n        label={headline}\n        isFirstElement\n      />\n      <Image className=\"IntroView1__image\" alt={imageAlt} srcUrl={renatoImg2} />\n      <Headline className=\"IntroView1__subheadline\" label={subheadline} />\n      <SectionParagraphs\n        className=\"IntroView1__sectionParagraphs\"\n        arrayOfParagraphs={arrayOfParagraphs}\n      />\n      <Link to=\"/main\" className=\"IntroView1__button\">\n        <Button type=\"button\" label={ctaLabel} arrowRight />\n      </Link>\n    </div>\n  );\n};\n\nexport default IntroView1;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { FunctionComponent } from 'react';\n\n// State\nimport { useAppDispatch } from '../state/hooks';\nimport { highlightTask, removeTask, taskProps } from '../state/taskSlice';\n\n// Components\nimport Button from './core/Button';\n\n// CopyText\nimport copyText from '../assets/copyText';\n\ninterface DialogProps {\n  tasks: taskProps[];\n  setShowModal: (event: boolean) => void;\n  setShowToast: (event: boolean) => void;\n}\n\nconst Dialog: FunctionComponent<DialogProps> = ({\n  tasks,\n  setShowModal,\n  setShowToast,\n}) => {\n  const dispatch = useAppDispatch();\n\n  const TOAST_SECONDS_TO_HIDE = 5000;\n\n  const selectedItem = tasks.filter((task) => task.isHighlighted)[0];\n\n  const { label, deleteButton, goBackButton } = copyText.modal;\n\n  const handleDelete = () => {\n    if (selectedItem) {\n      dispatch(removeTask(selectedItem.id));\n      setShowModal(false);\n      setShowToast(true);\n      setTimeout(() => {\n        setShowToast(false);\n      }, TOAST_SECONDS_TO_HIDE);\n    }\n  };\n\n  const handleGoBack = () => {\n    dispatch(highlightTask(selectedItem.id));\n    setShowModal(false);\n  };\n\n  return (\n    <div className=\"Dialog\" data-testid=\"modal\">\n      {label}\n      <div className=\"Dialog__buttons\">\n        <Button\n          className=\"Dialog__delete\"\n          label={deleteButton}\n          type=\"button\"\n          onClick={handleDelete}\n        />\n        <Button\n          className=\"Dialog__goBack\"\n          label={goBackButton}\n          type=\"button\"\n          onClick={handleGoBack}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Dialog;\n","import { FunctionComponent } from 'react';\n\nconst Modal: FunctionComponent = () => {\n  return <div className=\"Modal\" />;\n};\n\nexport default Modal;\n","import { FunctionComponent } from 'react';\n\n// CopyText\nimport copyText from '../assets/copyText';\n\nconst Toast: FunctionComponent = () => {\n  return <div className=\"Toast\">{copyText.toastLabel}</div>;\n};\n\nexport default Toast;\n","import { FunctionComponent } from 'react';\n\ninterface CheckboxProps {\n  label: string;\n  value: number;\n  isChecked: boolean;\n  onChange: () => void;\n}\n\nconst Checkbox: FunctionComponent<CheckboxProps> = ({\n  label,\n  value,\n  isChecked,\n  onChange,\n}) => {\n  return (\n    <div className=\"Task__checkbox\">\n      <input\n        id={`checkbox-0${value}`}\n        value={value}\n        checked={isChecked}\n        onChange={onChange}\n        type=\"checkbox\"\n      />\n      <label htmlFor={`checkbox-0${value}`}>{label}</label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","export default __webpack_public_path__ + \"static/media/taaac.a8a97478.mp3\";","import { FunctionComponent } from 'react';\n\n// Router\nimport { Link } from 'react-router-dom';\n\n// State\nimport { useAppDispatch } from '../state/hooks';\nimport { highlightTask, toggleTask } from '../state/taskSlice';\n\n// Components\nimport Button from './core/Button';\nimport Checkbox from './core/Checkbox';\nimport taaacSound from '../assets/sounds/taaac.mp3';\n\ninterface TaskProps {\n  id: number;\n  label: string;\n  speed: number;\n  urgency: number;\n  fun: number;\n  isCompleted: boolean;\n  setSpeed: (event: number) => void;\n  setUrgency: (event: number) => void;\n  setFun: (event: number) => void;\n  setEditIndex: (event: number) => void;\n  setItemText: (event: string) => void;\n  setModifyTask: (event: boolean) => void;\n  setShowModal: (event: boolean) => void;\n}\n\nconst Task: FunctionComponent<TaskProps> = ({\n  id,\n  label,\n  speed,\n  urgency,\n  fun,\n  isCompleted,\n  setSpeed,\n  setUrgency,\n  setFun,\n  setEditIndex,\n  setItemText,\n  setModifyTask,\n  setShowModal,\n}) => {\n  const dispatch = useAppDispatch();\n\n  const handleModifyTask = () => {\n    setSpeed(speed);\n    setUrgency(urgency);\n    setFun(fun);\n    setItemText(label);\n    setEditIndex(id);\n    setModifyTask(true);\n  };\n\n  const handleCompleteTask = () => {\n    dispatch(toggleTask(id));\n    if (!isCompleted) new Audio(taaacSound).play();\n  };\n\n  const handleRemoveDialog = () => {\n    dispatch(highlightTask(id));\n    if (setShowModal) setShowModal(true);\n  };\n\n  return (\n    <li className=\"Task\">\n      <Checkbox\n        label={label}\n        value={id}\n        isChecked={isCompleted}\n        onChange={handleCompleteTask}\n      />\n      <div className=\"Task__buttons\">\n        <Link to=\"add-edit\" className=\"Task__edit\">\n          <Button editSign type=\"button\" onClick={handleModifyTask} />\n        </Link>\n        <Button\n          className=\"Task__trash\"\n          trashSign\n          type=\"button\"\n          onClick={handleRemoveDialog}\n        />\n      </div>\n    </li>\n  );\n};\n\nexport default Task;\n","import { FunctionComponent, useState } from 'react';\n\n// Icons\nimport { FiChevronUp } from 'react-icons/fi';\n\n// State\nimport { taskProps } from '../state/taskSlice';\n\n// Components\nimport Headline from './core/Headline';\nimport Task from './Task';\n\n// CopyText\nimport copyText from '../assets/copyText';\n\ninterface TasksTodoProps {\n  className: string;\n  tasks: taskProps[];\n  tasksTotal: number;\n  tasksTodo: number;\n  setSpeed: (event: number) => void;\n  setUrgency: (event: number) => void;\n  setFun: (event: number) => void;\n  setEditIndex: (event: number) => void;\n  setItemText: (event: string) => void;\n  setModifyTask: (event: boolean) => void;\n  setShowModal: (event: boolean) => void;\n}\n\nconst TasksTodo: FunctionComponent<TasksTodoProps> = ({\n  className,\n  tasks,\n  tasksTotal,\n  tasksTodo,\n  setSpeed,\n  setUrgency,\n  setFun,\n  setEditIndex,\n  setItemText,\n  setModifyTask,\n  setShowModal,\n}) => {\n  const { tasksTodoHeadline } = copyText.tasks;\n\n  const counter = `${tasksTodo}/${tasksTotal}`;\n\n  const taskCounter = tasksTotal === 0 ? '(vuoto)' : `(${counter})`;\n\n  const [isAccordionOpen, setIsAccordionOpen] = useState(true);\n\n  const handleAccordion = () => {\n    if (isAccordionOpen) {\n      setIsAccordionOpen(false);\n    } else {\n      setIsAccordionOpen(true);\n    }\n  };\n\n  return (\n    <div className={`${className}${isAccordionOpen ? ' -open' : ''}`}>\n      <button\n        onClick={handleAccordion}\n        type=\"button\"\n        className=\"TasksTodo__headlineWrapper\"\n      >\n        <Headline label={`${tasksTodoHeadline} ${taskCounter}`} />\n        <FiChevronUp />\n      </button>\n      {tasksTodo > 0 && (\n        <ul className=\"TasksTodo__tasksWrapper\">\n          {tasks\n            .filter((task) => !task.isCompleted)\n            .sort((a, b) => b.total - a.total)\n            .map(({ id, label, isCompleted, speed, urgency, fun }) => {\n              return (\n                <Task\n                  key={id}\n                  id={id}\n                  label={label}\n                  isCompleted={isCompleted}\n                  speed={speed}\n                  urgency={urgency}\n                  fun={fun}\n                  setItemText={setItemText}\n                  setSpeed={setSpeed}\n                  setUrgency={setUrgency}\n                  setFun={setFun}\n                  setEditIndex={setEditIndex}\n                  setModifyTask={setModifyTask}\n                  setShowModal={setShowModal}\n                />\n              );\n            })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default TasksTodo;\n","import { FunctionComponent, useState } from 'react';\n\n// Icons\nimport { FiChevronUp } from 'react-icons/fi';\n\n// State\nimport { taskProps } from '../state/taskSlice';\n\n// Components\nimport Headline from './core/Headline';\nimport Task from './Task';\n\n// CopyText\nimport copyText from '../assets/copyText';\n\ninterface TasksDoneProps {\n  className: string;\n  tasksDone: number;\n  tasksTotal: number;\n  tasks: taskProps[];\n  setSpeed: (event: number) => void;\n  setUrgency: (event: number) => void;\n  setFun: (event: number) => void;\n  setEditIndex: (event: number) => void;\n  setItemText: (event: string) => void;\n  setModifyTask: (event: boolean) => void;\n  setShowModal: (event: boolean) => void;\n}\n\nconst TasksDone: FunctionComponent<TasksDoneProps> = ({\n  className,\n  tasksDone,\n  tasksTotal,\n  tasks,\n  setSpeed,\n  setUrgency,\n  setFun,\n  setEditIndex,\n  setItemText,\n  setModifyTask,\n  setShowModal,\n}) => {\n  const { tasksDoneHeadline } = copyText.tasks;\n\n  const counter = `${tasksDone}/${tasksTotal}`;\n\n  const taskCounter = tasksTotal === 0 ? '(vuoto)' : `(${counter})`;\n\n  const [isAccordionOpen, setIsAccordionOpen] = useState(true);\n\n  const handleAccordion = () => {\n    if (isAccordionOpen) {\n      setIsAccordionOpen(false);\n    } else {\n      setIsAccordionOpen(true);\n    }\n  };\n\n  return (\n    <div className={`${className}${isAccordionOpen ? ' -open' : ''}`}>\n      <button\n        onClick={handleAccordion}\n        type=\"button\"\n        className=\"TasksDone__headlineWrapper\"\n      >\n        <Headline label={`${tasksDoneHeadline} ${taskCounter}`} />\n        <FiChevronUp />\n      </button>\n      {tasksDone > 0 && (\n        <ul className=\"TasksDone__tasksWrapper\">\n          {tasks\n            .filter((task) => task.isCompleted)\n            .map(({ id, label, isCompleted, speed, urgency, fun }) => (\n              <Task\n                key={id}\n                isCompleted={isCompleted}\n                id={id}\n                label={label}\n                speed={speed}\n                urgency={urgency}\n                fun={fun}\n                setItemText={setItemText}\n                setSpeed={setSpeed}\n                setUrgency={setUrgency}\n                setFun={setFun}\n                setEditIndex={setEditIndex}\n                setModifyTask={setModifyTask}\n                setShowModal={setShowModal}\n              />\n            ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default TasksDone;\n","/* eslint-disable no-unused-expressions */\nimport { FunctionComponent, useEffect } from 'react';\n\n// Router\nimport { Link } from 'react-router-dom';\n\n// State\nimport { useAppSelector } from '../../state/hooks';\n\n// Components\nimport Button from '../../components/core/Button';\nimport Headline from '../../components/core/Headline';\nimport Dialog from '../../components/Dialog';\nimport Modal from '../../components/Modal';\nimport Toast from '../../components/Toast';\nimport TasksTodo from '../../components/TasksTodo';\nimport TasksDone from '../../components/TasksDone';\n\n// CopyText\nimport copyText from '../../assets/copyText';\n\ninterface MainViewProps {\n  showModal: boolean;\n  showToast: boolean;\n  setItemText: (event: string) => void;\n  setEditIndex: (event: number) => void;\n  setSpeed: (event: number) => void;\n  setUrgency: (event: number) => void;\n  setFun: (event: number) => void;\n  setModifyTask: (event: boolean) => void;\n  setShowModal: (event: boolean) => void;\n  setShowToast: (event: boolean) => void;\n}\n\nexport const MainView: FunctionComponent<MainViewProps> = ({\n  showModal,\n  showToast,\n  setEditIndex,\n  setItemText,\n  setSpeed,\n  setUrgency,\n  setFun,\n  setModifyTask,\n  setShowModal,\n  setShowToast,\n}) => {\n  const { headline } = copyText.general;\n\n  const tasks = useAppSelector((state) => state.task);\n  const tasksCompleted = useAppSelector((state) =>\n    state.task.map((task) => task.isCompleted),\n  );\n\n  const tasksTotal = tasks.length;\n  const tasksDone = tasksCompleted.filter(Boolean).length;\n  const tasksTodo = tasksTotal - tasksDone;\n\n  useEffect(() => {\n    const bodyElement = document.querySelector('body');\n\n    if (bodyElement) {\n      showModal === true\n        ? bodyElement.classList.add('blocked')\n        : bodyElement.classList.remove('blocked');\n    }\n  });\n\n  return (\n    <div className=\"MainView\">\n      {showModal && <Modal />}\n      <Headline\n        className=\"MainView__headline\"\n        isFirstElement\n        label={headline}\n      />\n      <TasksTodo\n        className=\"MainView__tasksTodo\"\n        tasks={tasks}\n        tasksTodo={tasksTodo}\n        tasksTotal={tasksTotal}\n        setItemText={setItemText}\n        setSpeed={setSpeed}\n        setUrgency={setUrgency}\n        setFun={setFun}\n        setEditIndex={setEditIndex}\n        setModifyTask={setModifyTask}\n        setShowModal={setShowModal}\n      />\n      <TasksDone\n        className=\"MainView__tasksDone\"\n        tasks={tasks}\n        tasksDone={tasksDone}\n        tasksTotal={tasksTotal}\n        setItemText={setItemText}\n        setSpeed={setSpeed}\n        setUrgency={setUrgency}\n        setFun={setFun}\n        setEditIndex={setEditIndex}\n        setModifyTask={setModifyTask}\n        setShowModal={setShowModal}\n      />\n      <Link to=\"add-edit\" className=\"MainView__addButton\">\n        <Button plusSign type=\"button\" />\n      </Link>\n      {showModal && (\n        <Dialog\n          tasks={tasks}\n          setShowModal={setShowModal}\n          setShowToast={setShowToast}\n        />\n      )}\n      {showToast && <Toast />}\n    </div>\n  );\n};\n\nexport default MainView;\n","// eslint-disable-next-line no-use-before-define\nimport React, { FunctionComponent } from 'react';\n\ninterface TextAreaProps {\n  id: string;\n  label: string;\n  value: string;\n  placeholder?: string;\n  onChange: React.ChangeEventHandler<HTMLTextAreaElement>;\n}\n\nconst TextArea: FunctionComponent<TextAreaProps> = ({\n  id,\n  label,\n  value,\n  placeholder,\n  onChange,\n}) => {\n  return (\n    <div className=\"AddEditTask__textarea\">\n      <label htmlFor={id}>{label}</label>\n      <textarea\n        id={id}\n        rows={6}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default TextArea;\n","import { FunctionComponent } from 'react';\n\n// Icons\nimport { FiClock, FiAlertTriangle, FiSmile } from 'react-icons/fi';\n\ninterface LabelIconProps {\n  className?: string;\n  label: string;\n  speedIcon?: boolean;\n  urgencyIcon?: boolean;\n  funIcon?: boolean;\n}\n\nconst LabelIcon: FunctionComponent<LabelIconProps> = ({\n  className,\n  label,\n  speedIcon,\n  urgencyIcon,\n  funIcon,\n}) => {\n  return (\n    <div className={className} data-testid=\"label-icon\">\n      {speedIcon && <FiClock data-testid=\"fi-clock\" />}\n      {urgencyIcon && <FiAlertTriangle data-testid=\"fi-alert-triangle\" />}\n      {funIcon && <FiSmile data-testid=\"fi-smile\" />}\n      {label}\n    </div>\n  );\n};\n\nexport default LabelIcon;\n","// eslint-disable-next-line no-use-before-define\nimport React, { FunctionComponent } from 'react';\n\ninterface RadioButtonProps {\n  className: string;\n  label: string;\n  name: string;\n  value: string;\n  isChecked: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst RadioButton: FunctionComponent<RadioButtonProps> = ({\n  className,\n  label,\n  name,\n  isChecked,\n  onChange,\n}) => {\n  return (\n    <div className={className}>\n      <label htmlFor={label}>\n        <input\n          checked={isChecked}\n          type=\"radio\"\n          id={label}\n          name={name}\n          value={label}\n          onChange={onChange}\n        />\n        {label}\n      </label>\n    </div>\n  );\n};\n\nexport default RadioButton;\n","import { FunctionComponent } from 'react';\n\n// Components\nimport LabelIcon from './core/LabelIcon';\nimport RadioButton from './core/RadioButton';\n\n// CopyText\nimport copyText from '../assets/copyText';\n\ninterface SpeedProps {\n  className: string;\n  speed: number;\n  setSpeed: (event: number) => void;\n}\n\nconst Speed: FunctionComponent<SpeedProps> = ({\n  className,\n  speed,\n  setSpeed,\n}) => {\n  const { name, options } = copyText.speed;\n  const { headlineLabel } = copyText.speed.headline;\n  return (\n    <div className={className}>\n      <LabelIcon\n        className=\"AddEditTask__choice-label\"\n        speedIcon\n        label={headlineLabel}\n      />\n      <div className=\"AddEditTask__choice-radio-wrapper\">\n        {options.map(({ label, id }, index) => {\n          const handleChange = (e: { target: { value: string } }) => {\n            if (e.target.value === options[0].label) {\n              setSpeed(options[0].id);\n            } else if (e.target.value === options[1].label) {\n              setSpeed(options[1].id);\n            } else {\n              setSpeed(options[2].id);\n            }\n          };\n          return (\n            <RadioButton\n              className={`AddEditTask__choice-radio ${\n                id === speed ? '-selected' : ''\n              }`}\n              key={index}\n              label={label}\n              isChecked={id === speed}\n              onChange={handleChange}\n              name={name}\n              value={label}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Speed;\n","/* eslint-disable no-unused-expressions */\nimport { FunctionComponent } from 'react';\n\n// Component\nimport LabelIcon from './core/LabelIcon';\nimport RadioButton from './core/RadioButton';\n\n// CopyText\nimport copyText from '../assets/copyText';\n\ninterface UrgencyProps {\n  className: string;\n  urgency: number;\n  setUrgency: (event: number) => void;\n}\n\nconst Urgency: FunctionComponent<UrgencyProps> = ({\n  className,\n  urgency,\n  setUrgency,\n}) => {\n  const { name, options } = copyText.urgency;\n  const { headlineLabel } = copyText.urgency.headline;\n  return (\n    <div className={className}>\n      <LabelIcon\n        className=\"AddEditTask__choice-label\"\n        urgencyIcon\n        label={headlineLabel}\n      />\n      <div className=\"AddEditTask__choice-radio-wrapper\">\n        {options.map(({ label, id }, index) => {\n          const handleChange = (e: { target: { value: string } }) => {\n            e.target.value === options[0].label\n              ? setUrgency(options[0].id)\n              : setUrgency(options[1].id);\n          };\n          return (\n            <RadioButton\n              className={`AddEditTask__choice-radio ${\n                id === urgency ? '-selected' : ''\n              }`}\n              key={index}\n              label={label}\n              isChecked={id === urgency}\n              onChange={handleChange}\n              name={name}\n              value={label}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Urgency;\n","/* eslint-disable no-unused-expressions */\nimport { FunctionComponent } from 'react';\n\n// Components\nimport LabelIcon from './core/LabelIcon';\nimport RadioButton from './core/RadioButton';\n\n// CopyText\nimport copyText from '../assets/copyText';\n\ninterface FunProps {\n  className: string;\n  fun: number;\n  setFun: (event: number) => void;\n}\n\nconst Fun: FunctionComponent<FunProps> = ({ className, fun, setFun }) => {\n  const { name, options } = copyText.fun;\n  const { headlineLabel } = copyText.fun.headline;\n  return (\n    <div className={className}>\n      <LabelIcon\n        className=\"AddEditTask__choice-label\"\n        funIcon\n        label={headlineLabel}\n      />\n      <div className=\"AddEditTask__choice-radio-wrapper\">\n        {options.map(({ label, id }, index) => {\n          const handleChange = (e: { target: { value: string } }) => {\n            e.target.value === options[0].label\n              ? setFun(options[0].id)\n              : setFun(options[1].id);\n          };\n          return (\n            <RadioButton\n              className={`AddEditTask__choice-radio ${\n                id === fun ? '-selected' : ''\n              }`}\n              key={index}\n              label={label}\n              isChecked={id === fun}\n              onChange={handleChange}\n              name={name}\n              value={label}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Fun;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { FunctionComponent } from 'react';\n\n// Router\nimport { Link } from 'react-router-dom';\n\n// State\nimport { useAppDispatch } from '../../state/hooks';\nimport { addTask, editTask } from '../../state/taskSlice';\n\n// Components\nimport Button from '../../components/core/Button';\nimport TextArea from '../../components/core/TextArea';\nimport Speed from '../../components/Speed';\nimport Urgency from '../../components/Urgency';\nimport Fun from '../../components/Fun';\n\n// CopyText\nimport copyText from '../../assets/copyText';\n\ninterface AddEditViewProps {\n  itemText: string;\n  speed: number;\n  urgency: number;\n  fun: number;\n  editIndex: number;\n  modifyTask: boolean;\n  setItemText: (event: string) => void;\n  setSpeed: (event: number) => void;\n  setUrgency: (event: number) => void;\n  setFun: (event: number) => void;\n  setModifyTask: (event: boolean) => void;\n}\n\nconst AddEditView: FunctionComponent<AddEditViewProps> = ({\n  itemText,\n  speed,\n  urgency,\n  fun,\n  editIndex,\n  modifyTask,\n  setItemText,\n  setSpeed,\n  setUrgency,\n  setFun,\n  setModifyTask,\n}) => {\n  const {\n    buttonGoBack,\n    buttonDone,\n    placeHolder,\n    addTaskHeadline,\n    modifyTaskHeadline,\n  } = copyText.addEditTask;\n\n  const dispatch = useAppDispatch();\n\n  // New Task\n  const handleAddNewTask = (event: { target: { value: string } }) => {\n    setItemText(event.target.value);\n  };\n\n  const submitNewTask = () => {\n    dispatch(\n      addTask({\n        label: itemText,\n        speed,\n        urgency,\n        fun,\n      }),\n    );\n    setItemText('');\n    setSpeed(1);\n    setUrgency(1);\n    setFun(1);\n    setModifyTask(false);\n  };\n\n  // Modify Task\n  const handleModifyTask = (e: { target: { value: string } }) => {\n    setItemText(e.target.value);\n  };\n\n  const submitModfiyTask = () => {\n    dispatch(\n      editTask({ index: editIndex, label: itemText, speed, urgency, fun }),\n    );\n    setItemText('');\n    setModifyTask(false);\n  };\n\n  // Go Back\n  const handleGoBack = () => {\n    setSpeed(1);\n    setUrgency(1);\n    setFun(1);\n    setItemText('');\n    setModifyTask(false);\n  };\n\n  return (\n    <form className=\"AddEditTask\">\n      <div className=\"AddEditTask__buttons\">\n        <Link to=\"/main\" className=\"AddEditTask__goBack\">\n          <Button\n            arrowLeft\n            type=\"button\"\n            label={buttonGoBack}\n            onClick={handleGoBack}\n          />\n        </Link>\n        {!modifyTask ? (\n          <Link to=\"/main\" className=\"AddEditTask__confirm\">\n            <Button\n              type=\"submit\"\n              label={buttonDone}\n              isDisabled={!itemText}\n              onClick={submitNewTask}\n            />\n          </Link>\n        ) : (\n          <Link to=\"/main\" className=\"AddEditTask__confirm\">\n            <Button\n              type=\"button\"\n              label={buttonDone}\n              onClick={submitModfiyTask}\n            />\n          </Link>\n        )}\n      </div>\n      {!modifyTask ? (\n        <TextArea\n          id=\"addTask\"\n          label={addTaskHeadline}\n          value={itemText}\n          placeholder={placeHolder}\n          onChange={handleAddNewTask}\n        />\n      ) : (\n        <TextArea\n          id=\"modifyTask\"\n          label={modifyTaskHeadline}\n          value={itemText}\n          onChange={handleModifyTask}\n        />\n      )}\n      <Speed\n        className=\"AddEditTask__choice AddEditTask__choice--speed\"\n        speed={speed}\n        setSpeed={setSpeed}\n      />\n      <Urgency\n        className=\"AddEditTask__choice AddEditTask__choice--urgency\"\n        urgency={urgency}\n        setUrgency={setUrgency}\n      />\n      <Fun\n        className=\"AddEditTask__choice AddEditTask__choice--fun\"\n        fun={fun}\n        setFun={setFun}\n      />\n    </form>\n  );\n};\n\nexport default AddEditView;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { useState } from 'react';\n\n// Styling\nimport './styles/main.scss';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './state/store';\n\n// Views\nimport LandingView from './views/LandingView/LandingView';\nimport IntroView1 from './views/IntroView1/IntroView1';\nimport MainView from './views/MainView/MainView';\nimport AddEditView from './views/AddEditView/AddEditView';\n\nconst persistor = persistStore(store);\n\nconst App = () => {\n  const [itemText, setItemText] = useState('');\n  const [speed, setSpeed] = useState(1);\n  const [urgency, setUrgency] = useState(1);\n  const [fun, setFun] = useState(1);\n  const [editIndex, setEditIndex] = useState(0);\n  const [modifyTask, setModifyTask] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <div className=\"App\">\n          <Router>\n            <Route exact path=\"/renato-do-list\" component={LandingView} />\n            <Route path=\"/intro-1\" component={IntroView1} />\n            <Route\n              path=\"/main\"\n              render={() => (\n                <MainView\n                  setItemText={setItemText}\n                  setSpeed={setSpeed}\n                  setUrgency={setUrgency}\n                  setFun={setFun}\n                  setEditIndex={setEditIndex}\n                  setModifyTask={setModifyTask}\n                  setShowModal={setShowModal}\n                  showModal={showModal}\n                  showToast={showToast}\n                  setShowToast={setShowToast}\n                />\n              )}\n            />\n            <Route\n              path=\"/add-edit\"\n              render={() => (\n                <AddEditView\n                  itemText={itemText}\n                  speed={speed}\n                  urgency={urgency}\n                  fun={fun}\n                  editIndex={editIndex}\n                  modifyTask={modifyTask}\n                  setItemText={setItemText}\n                  setSpeed={setSpeed}\n                  setUrgency={setUrgency}\n                  setFun={setFun}\n                  setModifyTask={setModifyTask}\n                />\n              )}\n            />\n          </Router>\n        </div>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // eslint-disable-next-line no-console\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// eslint-disable-next-line no-use-before-define\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport store from './state/store';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}